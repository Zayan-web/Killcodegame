<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Brightness Game</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      margin: 0;
      padding: 0;
      background-color: #222;
      color: white;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    #game-container {
      padding: 20px;
      border-radius: 10px;
      background-color: #333;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);
      transition: opacity 0.3s ease-in-out;
      text-align: center;
    }
    #game-container button {
      padding: 10px 20px;
      font-size: 18px;
      margin: 20px;
      cursor: pointer;
      border-radius: 5px;
      border: none;
    }
    #option1-btn {
      background-color: #ff6347; /* Red for Option 1 */
    }
    #option2-btn {
      background-color: #32cd32; /* Green for Option 2 */
    }
    #fullscreen-btn {
      background-color: #1e90ff; /* Blue for Fullscreen */
    }
    #brightness-status {
      font-size: 24px;
      margin-top: 20px;
    }
  </style>
</head>
<body>

  <div id="game-container">
    <h1>Brightness Control Game</h1>
    <button id="option1-btn" onclick="lowerBrightness()">Option 1</button>
    <button id="option2-btn" onclick="raiseBrightness()">Option 2</button>
    <button id="fullscreen-btn" onclick="goFullscreen()">Go Fullscreen</button>
    <div id="brightness-status">Brightness: 100%</div>
  </div>

  <script>
    let brightnessLevel = 100;

    function updateBrightness() {
      const brightness = Math.min(255, Math.max(0, brightnessLevel));
      const brightScale = brightnessLevel / 100;

      // Simulate brightness by adjusting the background color
      document.body.style.backgroundColor = `rgb(${255 - (brightness * brightScale)}, ${255 - (brightness * brightScale)}, ${255 - (brightness * brightScale)})`;

      // Update the brightness status display
      document.getElementById('brightness-status').innerText = `Brightness: ${brightnessLevel}%`;

      // Adjust the opacity of the control box based on the brightness level
      const opacity = Math.max(1 - (brightnessLevel / 2000), 0);
      document.getElementById('game-container').style.opacity = opacity;
    }

    function lowerBrightness() {
      // Set brightness to the dimmest form (0%)
      brightnessLevel = 0;
      updateBrightness();
    }

    function raiseBrightness() {
      // Set brightness to the brightest form (2000%)
      brightnessLevel = 2000;
      updateBrightness();
    }

    function goFullscreen() {
      if (document.documentElement.requestFullscreen) {
        document.documentElement.requestFullscreen();
      } else if (document.documentElement.mozRequestFullScreen) { // Firefox
        document.documentElement.mozRequestFullScreen();
      } else if (document.documentElement.webkitRequestFullscreen) { // Chrome, Safari, Opera
        document.documentElement.webkitRequestFullscreen();
      } else if (document.documentElement.msRequestFullscreen) { // IE/Edge
        document.documentElement.msRequestFullscreen();
      }
    }

    // Initialize with full brightness
    updateBrightness();
  </script>

</body>
</html>
